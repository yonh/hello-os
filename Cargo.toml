[package]
name = "hello-os"
version = "0.0.0"
edition = "2021"

# 在其它一些情况下，栈展开并不是迫切需求的功能；因此，Rust 提供了在 panic 时中止（abort on panic）的选项。
# 这个选项能禁用栈展开相关的标志信息生成，也因此能缩小生成的二进制程序的长度。
# 有许多方式能打开这个选项，最简单的方式是把下面的几行设置代码
# 这些选项能将 dev 配置（dev profile）和 release 配置（release profile）的 panic 策略设为 abort。dev 配置适用于 cargo build，而 release 配置适用于 cargo build --release。现在编译器应该不再要求我们提供 eh_personality 语言项实现。
[profile.dev]
panic = "abort"

[profile.release]
panic = "abort"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bootloader = "0.9.3"
volatile = "0.2.6"
spin = "0.9.2"
x86_64 = "0.14.2"

[dependencies.lazy_static]
version = "1.0"
# 在这里，由于程序不连接标准库，我们需要启用 spin_no_std 特性。
features = ["spin_no_std"]


#因为cargo bootimage默认使用build，而不是xbuild。
[package.metadata.bootimage]
build-command = ["xbuild"]
# QEMU支持一种名为 isa-debug-exit的特殊设备，它提供了一种从客户系统（guest system）里退出QEMU的简单方式。
# 为了使用这个设备，我们需要向QEMU传递一个-device参数。当然，我们也可以通过将 package.metadata.bootimage.test-args 配置关键字来实现效果
# bootimage runner 会在QEMU的默认测试命令后添加test-args 参数。（对于cargo xrun命令，这个参数会被忽略。）
# 我们还传递了两个参数，iobase 和 iosize 。这两个参数指定了一个_I/O 端口_，我们的内核将通过它来访问设备。
test-args = ["-device", "isa-debug-exit,iobase=0xf4,iosize=0x04"]
# cargo test 会将所有非0的错误码都视为测试失败, 所以需要配置自定义成功退出码。
test-success-exit-code = 33         # (0x10 << 1) | 1